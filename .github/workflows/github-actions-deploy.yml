name: Deploy to Amazon ECS

on:
  pull_request:
    types: closed
    branches: ['master']
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}        # set this to your preferred AWS region, e.g. us-west-1
jobs:
  deploy:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'master' && github.event.pull_request.head.ref == 'develop'
    name: Deploy
    runs-on: ubuntu-latest
    environment: production
    outputs:
          duration: ${{ steps.duration.outputs.duration }}

    steps:
    - name: Record Start Time
      run: echo "START_TIME=$(date +%s)" >> $GITHUB_ENV

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login in to Amazon ECR 
      id: login-ecr 
      uses: aws-actions/amazon-ecr-login@v2
      with:
        mask-password:  "true"
        registry-type: private
        skip-logout: false
        
    - name: Determine Version
      id: getversion
      run: |
        VERSION=$(cat VERSION | tr -d '\n')
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

    - name: Build and push to ECR 
      id: build_image_worker
      env: 
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
        VERSION: ${{ steps.getversion.outputs.VERSION }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:test_$VERSION .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:test_$VERSION
        echo "image_worker=$ECR_REGISTRY/$ECR_REPOSITORY:test_$VERSION" >> $GITHUB_OUTPUT